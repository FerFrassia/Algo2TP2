INTERFAZ 
 \InterfazFuncion{Conectar}{\Inout{r}{red}, \In{c_1}{compu}, \In{i_1}{interfaz}, \In{c_2}{compu}, \In{i_2}{interfaz}}{}
  [$r_0$ $\igobs$ r $\wedge$ \{$c_1,c_2$\} $\subseteq$ computadoras($r$) $\wedge$ ip($c_1$) $\neq$ ip($c_2$) $\yluego$ $\neg$ conectadas?($r, c_1, c_2$) $\wedge$ $\neg$ usaInterfaz?($r, c_1, i_1$) $\wedge$ $\neg$ usaInterfaz?($r, c_2, i_2$)]
  {$r$ $\igobs$ conectar($r, c_1, i_1, c_2, i_2$)}
  [$\Complejidad{|c_1| + |c_2|}$]
  [Conecta dos computadoras y les añade la interfaz correspondiente.]

  \InterfazFuncion{Vecinos}{\In{r}{red}, \In{c}{compu}}{conj(compu)}
  [$c$ $\in$ computadoras($r$)]
  {$res$ $\igobs$ vecinos(r, c)}
  []
  [Devuelve todas las computadoras que están conectadas directamente con c]

  \InterfazFuncion{UsaInterfaz?}{\In{r}{red}, \In{c}{compu}, \In{i}{interfaz}}{bool}
  [$c$ $\in$ computadoras($r$)]
  {$res$ $\igobs$ usaInterfaz?(r, c, i)}
  []
  [Verifica que una computadora use una interfaz]

  \InterfazFuncion{CaminosMinimos}{\In{r}{red}, \In{c_1}{compu}, \In{c_2}{compu}}{conj(secu(compu))}
  [\{$c_1,c_2$\} $\subseteq$ computadoras($r$)]
  {$res$ $\igobs$ caminosMinimos(r, $c_1$, $c_2$)}
  []
  [Devuelve todos los caminos minimos de conexiones entre una computadora y otra]

  \InterfazFuncion{HayCamino?}{\In{r}{red}, \In{c_1}{compu}, \In{c_2}{compu}}{bool}
  [\{$c_1,c_2$\} $\subseteq$ computadoras($r$)]
  {$res$ $\igobs$ hayCamino?(r, $c_1$, $c_2$)}
  []
  [Verifica que haya un camino de conexiones entre una computadora y otra]

ALGORITMOS
\begin{Algoritmo}{iComputadoras}{\In{r}{red}}{itConj(Compu)}
	{
		\State $res$ $\gets$ CrearIt($r.computadoras$) \ComplejidadDer{1}
	} 
	{$\Complejidad{1}$}{}
	\end{Algoritmo}

\begin{Algoritmo}{iVecinos}{\In{r}{red}, \In{c}{compu}}{conj(compu)}
	{
		\State $res$ $\gets$ Claves(Significado(r.vecinosEInterfaces, c))








